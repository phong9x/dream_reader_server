/*
 * Created on 27 thg 9 2017 ( Time 14:44:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.dream_reader.web.controller.admin;


import java.util.List;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import org.dream_reader.web.common.AbstractController;
import org.dream_reader.web.common.Login;
import org.dream_reader.web.common.utils.EncryptionUtils;
import org.dream_reader.web.common.utils.DataUtils;
import org.dream_reader.bean.Category;
import org.dream_reader.bean.User;
import org.dream_reader.bean.UserItem;
//--- Entities
import org.dream_reader.bean.jpa.CategoryEntity;
import org.dream_reader.business.service.CategoryService;
//--- Services 
import org.dream_reader.business.service.UserService;

@Controller
@RequestMapping("")
public class MainAdminController extends AbstractController {

	private static final Integer PAGE_SIZE   = 10;

	private static String nav = "main";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_INDEX   = "/index";
	private static final String JSP_LOGIN   = "/login";

	//Resource
	@Resource
	private UserService userService;
	@Resource
	private CategoryService categoryService;
	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	@RequestMapping(value="/login",method=RequestMethod.POST)
	public String login(
			@RequestParam(value="username",defaultValue="") String username,
			@RequestParam(value="password",defaultValue="") String password,
			@RequestParam(value = "remember", defaultValue = "") String remember,
			Model model, HttpSession session, HttpServletResponse response) {
		if(username == null || password == null){
			model.addAttribute("username", username);
			model.addAttribute("login_success", 0);
			return getView();
		}
		User user = userService.login(username,  EncryptionUtils.jwtBuild(password));
	if(user!=null){
			UserItem u = new UserItem();
			u.setId(user.getId());
			u.setPoint(user.getPoint());
			u.setUsername(user.getUsername());
			Login.saveUser(u, session);
			return "redirect:"+JSP_INDEX;
		}else{
			model.addAttribute("login_success", 0);
			return JSP_LOGIN;
		}
		
	}
	
	@RequestMapping(value= {"/login"},method=RequestMethod.GET)
	public String login(Model model, HttpSession session) {
		return getView();	
	}
	
	@RequestMapping(value= {"/findpw"},method=RequestMethod.GET)
	public String findpw(Model model, HttpSession session) {
		return getView();	
	}
	
	@RequestMapping(value= {"/policy"})
	public String policy(Model model, HttpSession session) {
		return getView();	
	}
	
	@RequestMapping(value= {"/privacy"})
	public String privacy(Model model, HttpSession session) {
		return getView();	
	}
	
	@RequestMapping(value= {"/join"},method=RequestMethod.GET)
	public String join(Model model, HttpSession session) {
		return getView();
	}
	
	@RequestMapping(value= {"/join"},method=RequestMethod.POST)
	public String join_post(
			@RequestParam(value="userId", defaultValue="") Integer userId,
			Model model, 
			HttpSession session
			) {
		try {
			User u =userService.findById(userId);
			u.setPoint(3);
			userService.update(u);
			return "redirect:login";	
		} catch (Exception e) {
			e.printStackTrace();
			return redirectView();
		}
		
	}
	
	@RequestMapping("/logout")
	public String logout(Model model, HttpSession session) {
			Login.removeUserLogin(session);
			return "redirect:/index";	
		}
	
	
	@RequestMapping(value={"/index","","/"})
	public String index(
			Model model,HttpSession session) {
			List<CategoryEntity> listParent = categoryService.findByParentId(null);
			model.addAttribute("listParent", listParent);
			return JSP_INDEX;
	}
	


}
