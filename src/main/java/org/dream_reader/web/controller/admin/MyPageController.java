/*
 * Created on 27 thg 9 2017 ( Time 14:44:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.dream_reader.web.controller.admin;


import java.util.List;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import org.dream_reader.web.common.AbstractController;
import org.dream_reader.web.common.Login;
import org.dream_reader.web.common.utils.EncryptionUtils;
import org.dream_reader.web.common.utils.DataUtils;
import org.dream_reader.bean.Category;
import org.dream_reader.bean.User;
import org.dream_reader.bean.UserItem;
//--- Entities
import org.dream_reader.bean.jpa.CategoryEntity;
import org.dream_reader.business.service.CategoryService;
//--- Services 
import org.dream_reader.business.service.UserService;

@Controller
@RequestMapping("/auth")
public class MyPageController extends AbstractController {

	private static final Integer PAGE_SIZE   = 10;

	private static String nav = "main";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_INDEX   = "/index";
	private static final String JSP_LOGIN   = "/login";

	//Resource
	@Resource
	private UserService userService;
	@Resource
	private CategoryService categoryService;
	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	@RequestMapping(value="/mypage",method=RequestMethod.GET)
	public String mypage(
			@RequestParam(value="success", defaultValue="") Integer success,
			Model model, HttpSession session, HttpServletResponse response) {
		
		UserItem userLogined = Login.getUserLogin(session);
		User u = userService.findById(userLogined.getId());
		model.addAttribute("user", u);
		model.addAttribute("success",success);
		return getView();
		
	}
	
	@RequestMapping(value="/mypage",method=RequestMethod.POST)
	public String mypage_post(
			@RequestParam(value="newPassword", defaultValue="") String newPassword,
			@RequestParam(value="newPassword2", defaultValue="") String newPassword2,
			@RequestParam(value="password", defaultValue="") String password,
			Model model, HttpSession session, HttpServletResponse response) {
		
		UserItem userLogined = Login.getUserLogin(session);
		
		User u = userService.findById(userLogined.getId());
		String passEncrypt = EncryptionUtils.jwtBuild(password);
		System.out.println(u.getPassword());
		System.out.println(passEncrypt);
		if( u.getPassword().equals(passEncrypt) && newPassword != null) {
			u.setPassword(EncryptionUtils.jwtBuild(newPassword));
			userService.update(u);
			
		}
		return redirectView()+"?success=1";
		
	}
	
	@RequestMapping(value="/withdraw",method=RequestMethod.GET)
	public String withdraw(
			@RequestParam(value="success", defaultValue="") Integer success,
			Model model, HttpSession session, HttpServletResponse response) {
		
		UserItem userLogined = Login.getUserLogin(session);
		
		if(success == null) {
			User u = userService.findById(userLogined.getId());
			model.addAttribute("user", u);
		}else {
			Login.removeUserLogin(session);
			model.addAttribute("success",success);
			
		}
		
		
		return getView();
		
	}
	
	@RequestMapping(value="/withdraw",method=RequestMethod.POST)
	public String withdraw_post(
			Model model, HttpSession session, HttpServletResponse response) {
		
		UserItem userLogined = Login.getUserLogin(session);
		userService.delete(userLogined.getId());
		return redirectView()+"?success=1";
		
	}

}
